**FIXME**: Ensure the badges are correct and complete, then remove this message!

[![License](http://img.shields.io/:license-apache-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html) [![Build Status](https://travis-ci.org/simp/pupmod-simp-libkv.svg)](https://travis-ci.org/simp/pupmod-simp-libkv) [![SIMP compatibility](https://img.shields.io/badge/SIMP%20compatibility-6.*-orange.svg)](https://img.shields.io/badge/SIMP%20compatibility-6.*-orange.svg)

#### Table of Contents

1. [Description](#description)
2. [Setup - The basics of getting started with libkv](#setup)
    * [What libkv affects](#what-libkv-affects)
    * [Setup requirements](#setup-requirements)
    * [Beginning with libkv](#beginning-with-libkv)
3. [Usage - Configuration options and additional functionality](#usage)
4. [Function Reference](#function-reference)
<% data["functions"].each do |key, value| %>    * [libkv::<%= key %>](#<%= key %>)
<% end %>
5. [Development - Guide for contributing to the module](#development)
    * [Acceptance Tests - Beaker env variables](#acceptance-tests)

## Description

libkv is an abstract library that allows puppet to access a distributed key value store, like consul or etcd. This library implements all the basic key/value primitives, get, put, list, delete. It also exposes any 'check and set' functionality the underlying store supports. This allows building of safe atomic operations, to build complex distributed systems. This library supports loading 'provider' modules that exist in other modules, and provides a first class api.

When any libkv function is called, it will first call `lookup()` and attempt to find a value for libkv::url from hiera. This url specifies the provider name, the host, the port, and the path in the underlying store. For example:
```yaml
libkv::url: 'consul://127.0.0.1:8500/puppet'
libkv::url: 'consul+ssl://1.2.3.4:8501/puppet'
libkv::url: 'file://'
libkv::url: 'etcd://127.0.0.1:2380/puppet/%{environment}/'
libkv::url: 'consul://127.0.0.1:8500/puppet/%{trusted.extensions.pp_department}/%{environment}'
```

Additionally libkv uses lookup to store authentication information. This information can range from ssl client certificates, access tokens, or usernames and passwords. The options are provider specific, so it's best

libkv currently supports the following providers:

* `mock` - useful for testing, as it provides a kv store that is destroyed after each catalog compilation
* `consul` - Allows connectivity to an existing consul service

With the intention to support the following:
* `etcd` - Allows connectivity to an existing etcd service
* `simp6-legacy` - Implements the SIMP 6 legacy file storage api. 
* `file` - Implements a non-ha flat file storage api.

This module is a component of the [System Integrity Management
Platform](https://github.com/NationalSecurityAgency/SIMP), a
compliance-management framework built on Puppet.

If you find any issues, they may be submitted to our [bug
tracker](https://simp-project.atlassian.net/).

## Setup

### What libkv affects

**FIXME:** Ensure the *What libkv affects* section is correct and complete, then remove this message!

If it's obvious what your module touches, you can skip this section. For
example, folks can probably figure out that your mysql_instance module affects
their MySQL instances.

If there's more that they should know about, though, this is the place to
mention:

 * A list of files, packages, services, or operations that the module will
   alter, impact, or execute.
 * Dependencies that your module automatically installs.
 * Warnings or other important notices.

### Setup Requirements **OPTIONAL**

**FIXME:** Ensure the *Setup Requirements* section is correct and complete, then remove this message!

If your module requires anything extra before setting up (pluginsync enabled,
etc.), mention it here.

If your most recent release breaks compatibility or requires particular steps
for upgrading, you might want to include an additional "Upgrading" section
here.

### Beginning with libkv

**FIXME:** Ensure the *Beginning with libkv* section is correct and complete, then remove this message!

The very basic steps needed for a user to get the module up and running. This
can include setup steps, if necessary, or it can be an example of the most
basic use of the module.

## Usage

**FIXME:** Ensure the *Usage* section is correct and complete, then remove this message!

This section is where you describe how to customize, configure, and do the
fancy stuff with your module here. It's especially helpful if you include usage
examples and code samples for doing things with your module.

## Function reference
<% data["functions"].each do |key, value| %>
<h3><a id="<%= key %>">libkv::<%= key %></a></h3>
	
<%= value[:description] %>	
<% unless value[:reserved] == true %>
<% if value[:allow_empty] == true %>
`<%= value[:retval] %> <%= "$#{value[:examplereturn]}" %> = libkv::<%= key %>()`
<% end %>
<% if value.key?(:signatures) %>
<% value[:signatures].each do |signaturename, definition|%>
<%
   argarray = []
   definition["args"].each do |element|
      argarray << "#{element['type']} #{element['name']}"
   end
   arglist = argarray.join(", ")
%>
`<%= value[:retval] %> $<%= value[:examplereturn] %> = libkv::<%= key %>(<%= arglist %>)`
<% end %>
<% end %>
*Returns:*
<%= value[:retval] %>
<% if value.key?(:examples) %>
*Usage:*		
<% value[:examples].each do |example|%>

<pre lang="ruby">
<%= example %>
</pre>
<% end %>
<% end %>


<% end %>
<% end %>



## Development

Please read our [Contribution Guide](http://simp-doc.readthedocs.io/en/stable/contributors_guide/index.html).

### Acceptance tests

This module includes [Beaker](https://github.com/puppetlabs/beaker) acceptance
tests using the SIMP [Beaker Helpers](https://github.com/simp/rubygem-simp-beaker-helpers).
By default the tests use [Vagrant](https://www.vagrantup.com/) with
[VirtualBox](https://www.virtualbox.org) as a back-end; Vagrant and VirtualBox
must both be installed to run these tests without modification. To execute the
tests run the following:

```shell
bundle install
bundle exec rake beaker:suites
```

Please refer to the [SIMP Beaker Helpers documentation](https://github.com/simp/rubygem-simp-beaker-helpers/blob/master/README.md)
for more information.
